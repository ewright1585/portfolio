@import "_variables.scss";

// // Mixin to define base variables and generate color, font-size, and spacing scales with headers and spacing
// @mixin generate-css-variables($steps: 5) {
//     :root {
//       // Base variables as CSS custom properties
//       @each $var-name, $var-value in (
//         primary: $primary,
//         secondary: $secondary,
//         font-size: $font-size,
//         spacing-unit: $spacing-unit
//       ) {
//         --#{$var-name}: #{$var-value};
//       }
  
//       // ---------- Primary Colors ----------
//       @each $color-name, $color-value in (primary: $primary) {
//         $previous-lighten: null;
//         $previous-darken: null;
  
//         // Lighter shades
//         @for $i from 1 through $steps {
//           $percentage: $i * (100% / $steps);
//           $lighten-color: lighten($color-value, $percentage);
  
//           @if $lighten-color != $previous-lighten {
//             --#{$color-name}-lighten-#{$i}: #{$lighten-color};
//             $previous-lighten: $lighten-color;
//           }
//         }
  
//         // Darker shades
//         @for $i from 1 through $steps {
//           $percentage: $i * (100% / $steps);
//           $darken-color: darken($color-value, $percentage);
  
//           @if $darken-color != $previous-darken {
//             --#{$color-name}-darken-#{$i}: #{$darken-color};
//             $previous-darken: $darken-color;
//           }
//         }
//       }
  
//       // ---------- Secondary Colors ----------
//       @each $color-name, $color-value in (secondary: $secondary) {
//         $previous-lighten: null;
//         $previous-darken: null;
  
//         // Lighter shades
//         @for $i from 1 through $steps {
//           $percentage: $i * (100% / $steps);
//           $lighten-color: lighten($color-value, $percentage);
  
//           @if $lighten-color != $previous-lighten {
//             --#{$color-name}-lighten-#{$i}: #{$lighten-color};
//             $previous-lighten: $lighten-color;
//           }
//         }
  
//         // Darker shades
//         @for $i from 1 through $steps {
//           $percentage: $i * (100% / $steps);
//           $darken-color: darken($color-value, $percentage);
  
//           @if $darken-color != $previous-darken {
//             --#{$color-name}-darken-#{$i}: #{$darken-color};
//             $previous-darken: $darken-color;
//           }
//         }
//       }
  
//       // ---------- Font Size Scale ----------
//       @if $font-size {
//         // Smaller font sizes first, but stopping at 0
//         @for $i from ($steps) through 0 {
//           $calculated-smaller-size: $font-size * (1 - ($i * 0.25)); // Smaller font sizes
//           @if $calculated-smaller-size > 0 {
//             --font-size--#{$i}: #{$calculated-smaller-size};
//           }
//         }
  
//         // Larger font sizes
//         @for $i from 1 through $steps {
//           $calculated-size: $font-size * (1 + ($i * 0.5)); // Larger font sizes
//           --font-size-#{$i}: #{$calculated-size};
//         }
//       }
  
//       // ---------- Spacing Scale ----------
//       @if $spacing-unit {
//         // Smaller spacing values first, but stopping at 0
//         @for $i from ($steps) through 0 {
//           $calculated-spacing: $spacing-unit * (1 - ($i * 0.1)); // Smaller spacing values
//           @if $calculated-spacing > 0 {
//             --spacing-unit--#{$i}: #{$calculated-spacing};
//           }
//         }
  
//         // Larger spacing values
//         @for $i from 1 through $steps {
//           $calculated-spacing: $spacing-unit * $i;
//           --spacing-unit-#{$i}: #{$calculated-spacing};
//         }
//       }
//     }
//   }

// Mixin to define base variables and generate color, font-size, and spacing scales with headers and spacing
@mixin generate-css-variables($steps: 5) {
    :root {
      // ---------- Primary Colors ----------
      /* Primary Color Variables */
      --primary: #{$primary};
  
      @each $color-name, $color-value in (primary: $primary) {
        $previous-lighten: null;
        $previous-darken: null;
  
        // Lighter shades
        @for $i from 1 through $steps {
          $percentage: $i * (100% / $steps);
          $lighten-color: lighten($color-value, $percentage);
  
          @if $lighten-color != $previous-lighten {
            --#{$color-name}-lighten-#{$i}: #{$lighten-color};
            $previous-lighten: $lighten-color;
          }
        }
  
        // Darker shades
        @for $i from 1 through $steps {
          $percentage: $i * (100% / $steps);
          $darken-color: darken($color-value, $percentage);
  
          @if $darken-color != $previous-darken {
            --#{$color-name}-darken-#{$i}: #{$darken-color};
            $previous-darken: $darken-color;
          }
        }
      }
  
      // ---------- Secondary Colors ----------
      /* Secondary Color Variables */
      --secondary: #{$secondary};
  
      @each $color-name, $color-value in (secondary: $secondary) {
        $previous-lighten: null;
        $previous-darken: null;
  
        // Lighter shades
        @for $i from 1 through $steps {
          $percentage: $i * (100% / $steps);
          $lighten-color: lighten($color-value, $percentage);
  
          @if $lighten-color != $previous-lighten {
            --#{$color-name}-lighten-#{$i}: #{$lighten-color};
            $previous-lighten: $lighten-color;
          }
        }
  
        // Darker shades
        @for $i from 1 through $steps {
          $percentage: $i * (100% / $steps);
          $darken-color: darken($color-value, $percentage);
  
          @if $darken-color != $previous-darken {
            --#{$color-name}-darken-#{$i}: #{$darken-color};
            $previous-darken: $darken-color;
          }
        }
      }
 
      // ---------- Font Size Scale ----------
      /* Font Size Variables */
      @if $font-size {
        // Smaller font sizes first, but stopping at 0
        @for $i from ($steps) through 0 {
          $calculated-smaller-size: $font-size * (1 - ($i * 0.25)); // Smaller font sizes
          @if $calculated-smaller-size > 0 {
            --font-size--#{$i}: #{$calculated-smaller-size};
          }
        }
  
        // Larger font sizes
        @for $i from 1 through $steps {
          $calculated-size: $font-size * (1 + ($i * 0.5)); // Larger font sizes
          --font-size-#{$i}: #{$calculated-size};
        }
      }
  
      // ---------- Spacing Scale ----------
      /* Spacing Unit Variables */
      @if $spacing-unit {
        // Smaller spacing values first, but stopping at 0
        @for $i from ($steps) through 0 {
          $calculated-spacing: $spacing-unit * (1 - ($i * 0.25)); // Smaller spacing values
          @if $calculated-spacing > 0 {
            --spacing-unit--#{$i}: #{$calculated-spacing};
          }
        }
  
        // Larger spacing values
        @for $i from 1 through $steps {
          $calculated-spacing: $spacing-unit * $i;
          --spacing-unit-#{$i}: #{$calculated-spacing};
        }
      }
    }
  }
  


  
  

  @include generate-css-variables(5);
  